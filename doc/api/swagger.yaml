swagger: '2.0'
info:
  title: Fractalis API
  description: foobar
  version: 0.0.0
host: '127.0.0.1:5000'
schemes:
  - http
produces:
  - application/json
paths:
  /data:
    post:
      summary: Add data to session
      parameters:
        - name: service
          in: query
          description: Service that defines a data source by linking to configured server url and ETL handler
          required: true
          type: string
        - name: auth
          in: query
          description: Contains necessary information to authenticate with server API
          required: true
          type: object
        - name: descriptors
          in: query
          description: >-
            Contains information necessary to request certain data from the
            server
          required: true
          type: object
      responses:
        '201':
          description: CREATED

    get:
      summary: Get all completed and running data tasks for session
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data_states:
                type: array
                items:
                  $ref: '#/definitions/DataState'
    delete:
      summary: Remove all data associated with session.
      responses:
        '200':
           description: OK
  '/data/{task_id}':
    parameters:
      - name: task_id
        in: path
        description: ID given on launching a data task
        required: true
        type: string
      delete:
        summary: Remove all data associated with the given task id.
        responses:
          '200':
            description: OK
  '/data/meta/{task_id}':
    parameters:
      - name: task_id
        in: path
        description: ID given on launching a data task
        required: true
        type: string
    get:
      summary: Get meta information object for given task_id.
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data_state:
                $ref: '#/definitions/DataMetaInformation'
  /analytics:
    post:
      summary: Submit analysis task
      parameters:
        - name: task_name
          in: query
          description: Analysis task to run
          required: true
          type: string
        - name: args
          in: query
          description: Arguments passed to the analysis task
          required: true
          type: object
      responses:
        '201':
          description: CREATED
          schema:
            type: object
            properties:
              task_id:
                type: string
  '/analytics/{task_id}':
    parameters:
      - name: task_id
        in: path
        description: ID given on task creation
        required: true
        type: string
    get:
      summary: Get task status information for given task id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JobState'
    delete:
      summary: Cancel a task for a given task_id.
      responses:
        '200':
          description: OK
  /state:
    post:
      summary: Save data state
      parameters:
        - name: service
          in: query
          description: Service that defines a data source by linking to configured server url and ETL handler
          required: true
          type: string
        - name: state
          in: query
          description: Data state
          required: true
          type: string
      responses:
        '201':
          description: CREATED
          schema:
            type: object
            properties:
              state_id:
                type: string
  '/state/{state_id}':
    parameters:
      - name: state_id
        in: path
        description: ID of the state that is requested
        required: true
        type: string
    get:
      summary: Check a state of every ETL linked to the state_id executed for this session
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              state:
                type: string
    post:
      summary: Verify the access to the state
      parameters:
        - name: auth
          in: query
          description: Contains necessary information to authenticate with server API
          required: true
      responses:
        '202':
          description: ACCEPTED

definitions:
  DataState:
    type: object
    properties:
      task_id:
        type: string
      data_type:
        type: string
      label:
        type: string
      hash:
        type: integer
      etl_message:
        type: string
      etl_state:
        type: string
  DataMetaInformation:
    type: object
    properties:
      features:
        type: array
      descriptor:
        type: string
  JobState:
    type: object
    properties:
      state:
        type: string
      result:
        type: string
